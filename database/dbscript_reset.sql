-- MySQL Script generated by MySQL Workbench
-- 05/19/14 14:14:22
-- Model: New Model    Version: 1.0
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Table `N2nTalent`.`Neighborhood`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `N2nTalent`.`Neighborhood` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `N2nTalent`.`Neighborhood` (
  `NeighborhoodId` INT NOT NULL,
  `Name` VARCHAR(100) NULL,
  `Description` VARCHAR(800) NULL,
  PRIMARY KEY (`NeighborhoodId`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `N2nTalent`.`Category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `N2nTalent`.`Category` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `N2nTalent`.`Category` (
  `CategoryId` INT NOT NULL,
  `Name` VARCHAR(100) NULL,
  `Description` VARCHAR(800) NULL,
  `ParentCategoryId` INT NULL,
  PRIMARY KEY (`CategoryId`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `N2nTalent`.`Provider`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `N2nTalent`.`Provider` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `N2nTalent`.`Provider` (
  `ProviderId` INT NOT NULL,
  `NeighborhoodId` INT NOT NULL,
  `ProviderType` VARCHAR(100) NULL,
  `Name` VARCHAR(100) NULL,
  `Street1` VARCHAR(100) NULL,
  `Street2` VARCHAR(100) NULL,
  `City` VARCHAR(100) NULL,
  `State` VARCHAR(100) NULL,
  `Zip` VARCHAR(100) NULL,
  `Contact` VARCHAR(100) NULL,
  `Email` VARCHAR(150) NULL,
  `Phone` VARCHAR(100) NULL,
  `Url` VARCHAR(200) NULL,
  `ProfileImage` VARCHAR(100) NULL,
  `HoursAvailable` VARCHAR(100) NULL,
  `IsActive` BIT NULL,
  `Description` TEXT NULL,
  `CreatedDate` DATETIME NULL,
  `CreatedBy` INT NULL,
  `ModifiedDate` DATETIME NULL,
  `ModifiedBy` INT NULL,
  PRIMARY KEY (`ProviderId`),
  CONSTRAINT `FK_Neighborhood_Pro`
    FOREIGN KEY (`NeighborhoodId`)
    REFERENCES `N2nTalent`.`Neighborhood` (`NeighborhoodId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `FK_Provider_idx` ON `N2nTalent`.`Provider` (`NeighborhoodId` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `N2nTalent`.`Offering`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `N2nTalent`.`Offering` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `N2nTalent`.`Offering` (
  `OfferingId` INT NOT NULL,
  `ProviderId` INT NOT NULL,
  `NeighborhoodId` INT NOT NULL,
  `CategoryId` INT NOT NULL,
  `OfferingName` VARCHAR(100) NULL,
  `Description` VARCHAR(800) NULL,
  `Street1` VARCHAR(100) NULL,
  `Street2` VARCHAR(100) NULL,
  `City` VARCHAR(100) NULL,
  `State` VARCHAR(100) NULL,
  `Zip` VARCHAR(100) NULL,
  `ContactName` VARCHAR(100) NULL,
  `ContactEmail` VARCHAR(100) NULL,
  `ContactUrl` VARCHAR(200) NULL,
  `IsActive` BIT NULL,
  `CreatedDate` DATETIME NULL,
  `CreatedBy` INT NULL,
  `ModifiedDate` DATETIME NULL,
  `ModifiedBy` INT NULL,
  PRIMARY KEY (`OfferingId`),
  CONSTRAINT `FK_Neighborhood_Off`
    FOREIGN KEY (`NeighborhoodId`)
    REFERENCES `N2nTalent`.`Neighborhood` (`NeighborhoodId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_Category_Off`
    FOREIGN KEY (`CategoryId`)
    REFERENCES `N2nTalent`.`Category` (`CategoryId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_Provider_Off`
    FOREIGN KEY (`ProviderId`)
    REFERENCES `N2nTalent`.`Provider` (`ProviderId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `FK_Offering_idx` ON `N2nTalent`.`Offering` (`NeighborhoodId` ASC);

SHOW WARNINGS;
CREATE INDEX `FK_Category_idx` ON `N2nTalent`.`Offering` (`CategoryId` ASC);

SHOW WARNINGS;
CREATE INDEX `FK_Provider_O_idx` ON `N2nTalent`.`Offering` (`ProviderId` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `N2nTalent`.`Role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `N2nTalent`.`Role` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `N2nTalent`.`Role` (
  `RoleId` INT NOT NULL,
  `Name` VARCHAR(100) NULL,
  `Description` VARCHAR(800) NULL,
  `IsActive` BIT NULL,
  PRIMARY KEY (`RoleId`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `N2nTalent`.`User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `N2nTalent`.`User` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `N2nTalent`.`User` (
  `UserId` INT NOT NULL,
  `NeighborhoodId` INT NOT NULL,
  `RoleId` INT NOT NULL,
  `FirstName` VARCHAR(100) NULL,
  `LastName` VARCHAR(100) NULL,
  `Password` VARCHAR(100) NULL,
  `Email` VARCHAR(100) NULL,
  `Phone` VARCHAR(100) NULL,
  `ProfileImage` VARCHAR(100) NULL,
  `IsActive` BIT NULL,
  `LastLoginDate` DATETIME NULL,
  `LoginCount` INT NULL,
  `CreatedDate` DATETIME NULL,
  `CreatedBy` INT NULL,
  `ConfirmedDate` DATETIME NULL,
  `ModifiedDate` DATETIME NULL,
  `ModifiedBy` INT NULL,
  PRIMARY KEY (`UserId`),
  CONSTRAINT `FK_Neighborhood_Usr`
    FOREIGN KEY (`NeighborhoodId`)
    REFERENCES `N2nTalent`.`Neighborhood` (`NeighborhoodId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_Role_Usr`
    FOREIGN KEY (`RoleId`)
    REFERENCES `N2nTalent`.`Role` (`RoleId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `FK_Neighborhood_idx` ON `N2nTalent`.`User` (`NeighborhoodId` ASC);

SHOW WARNINGS;
CREATE INDEX `FK_Role_idx` ON `N2nTalent`.`User` (`RoleId` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `N2nTalent`.`UserProviderRole`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `N2nTalent`.`UserProviderRole` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `N2nTalent`.`UserProvider` (
  `RoleId` INT NOT NULL,
  `ProviderId` INT NOT NULL,
  `UserId` INT NOT NULL,
  PRIMARY KEY (`UserId`,`ProviderId`,`RoleId`),
  CONSTRAINT `FK_Provider_UP`
    FOREIGN KEY (`ProviderId`)
    REFERENCES `N2nTalent`.`Provider` (`ProviderId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_User_UP`
    FOREIGN KEY (`UserId`)
    REFERENCES `N2nTalent`.`User` (`UserId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_Role_UP`
    FOREIGN KEY (`RoleId`)
    REFERENCES `N2nTalent`.`Role` (`RoleId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `FK_User_UPR_idx` ON `N2nTalent`.`UserProvider` (`UserId` ASC);

SHOW WARNINGS;
CREATE INDEX `FK_Provider_idx` ON `N2nTalent`.`UserProvider` (`ProviderId` ASC);

SHOW WARNINGS;
CREATE INDEX `FK_Role_idx` ON `N2nTalent`.`UserProvider` (`RoleId` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `N2nTalent`.`Tag`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `N2nTalent`.`Tag` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `N2nTalent`.`Tag` (
  `TagId` INT NOT NULL,
  `Name` VARCHAR(100) NULL,
  `Description` VARCHAR(800) NULL,
  PRIMARY KEY (`TagId`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `N2nTalent`.`OfferingTag`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `N2nTalent`.`OfferingTag` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `N2nTalent`.`OfferingTag` (
  `OfferingId` INT NOT NULL,
  `TagId` INT NOT NULL,
  PRIMARY KEY (`OfferingId`),
  CONSTRAINT `FK_Tag_OT`
    FOREIGN KEY (`TagId`)
    REFERENCES `N2nTalent`.`Tag` (`TagId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_Offering_OT`
    FOREIGN KEY (`OfferingId`)
    REFERENCES `N2nTalent`.`Offering` (`OfferingId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `FK_Tag_idx` ON `N2nTalent`.`OfferingTag` (`TagId` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `N2nTalent`.`MessageLog`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `N2nTalent`.`MessageLog` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `N2nTalent`.`MessageLog` (
  `MessageId` INT NOT NULL,
  `ProviderId` INT NULL,
  `FromEmail` VARCHAR(100) NULL,
  `FromName` VARCHAR(100) NULL,
  `FromPhone` VARCHAR(100) NULL,
  `PreferredMethod` VARCHAR(100) NULL,
  `Subject` VARCHAR(300) NULL,
  `Message` VARCHAR(2000) NULL,
  PRIMARY KEY (`MessageId`),
  CONSTRAINT `FK_Provider_ML`
    FOREIGN KEY (`ProviderId`)
    REFERENCES `N2nTalent`.`Provider` (`ProviderId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `FK_Provider_ML_idx` ON `N2nTalent`.`MessageLog` (`ProviderId` ASC);


SHOW WARNINGS;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
